#ifndef SINGLY_H_
#define SINGLY_H_
#include <iostream>
using namespace std;

class Node {
private:
    int data;
    Node* next;
    friend class LinkedList;
};

class LinkedList {
private:
    Node* head;
    int size=0;
public:
    LinkedList();
    ~LinkedList();
    void append(int data);
    int length() const;
    void print() const;
};
#endif



LinkedList::LinkedList() : head(NULL) {}
LinkedList::~LinkedList(){}

void LinkedList::append(int data)
{
    Node* v = new Node;
    v->data = data;
    v->next = NULL;
    size += 1;

    Node* temp = head;
    
    if (temp == NULL)           // if (size == 0)
    {
        head = v;
    }

    while (temp->next != NULL)  // if (size >= 1)
    {
        temp = temp->next;
    }
    temp->next = v;
}

int LinkedList::length() const
{
    return size;
}

void LinkedList::print() const
{
    Node* temp = head;
    
    while (temp->next != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << temp->data;
}



int main()
{
    LinkedList list1;

    list1.append(1);
    list1.append(4);
    list1.append(2);
    list1.append(5);
    list1.append(3);

    list1.print();
    cout << list1.length();

    return 0;
}
